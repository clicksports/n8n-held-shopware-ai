{
  "name": "Test Shopware Credentials",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "id": "start",
      "name": "Start",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [200, 300]
    },
    {
      "parameters": {
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopwareApi",
        "url": "/api/_info/version",
        "httpMethod": "GET",
        "options": {
          "timeout": 10000
        }
      },
      "id": "test-connection",
      "name": "Test Connection",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [400, 300],
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// Test basic connection\nconst response = $json;\n\nconsole.log('üîç CONNECTION TEST RESULT:');\nconsole.log('Response:', JSON.stringify(response, null, 2));\n\nif (response.error) {\n  console.log('‚ùå Connection failed:', response.error);\n  return [{ json: { status: 'failed', error: response.error } }];\n}\n\nif (response.version || response.data) {\n  console.log('‚úÖ Connection successful!');\n  console.log('Shopware version:', response.version || 'Unknown');\n  return [{ json: { status: 'success', version: response.version } }];\n}\n\nconsole.log('‚ö†Ô∏è  Unexpected response format');\nreturn [{ json: { status: 'unknown', response: response } }];"
      },
      "id": "check-connection",
      "name": "Check Connection",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [600, 300]
    },
    {
      "parameters": {
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "shopwareApi",
        "url": "/api/product",
        "httpMethod": "GET",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "5"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "id": "test-simple-products",
      "name": "Test Simple Products",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [600, 400],
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// Test simple product endpoint\nconst response = $json;\n\nconsole.log('üõçÔ∏è  SIMPLE PRODUCTS TEST:');\nconsole.log('Response keys:', Object.keys(response));\n\nif (response.error) {\n  console.log('‚ùå Products endpoint failed:', response.error);\n} else if (response.data && Array.isArray(response.data)) {\n  console.log('‚úÖ Products found:', response.data.length);\n  console.log('Total available:', response.total);\n  if (response.data.length > 0) {\n    console.log('Sample product:', {\n      id: response.data[0].id,\n      name: response.data[0].name\n    });\n  }\n} else {\n  console.log('‚ö†Ô∏è  Unexpected products response:', response);\n}\n\nreturn $input.all();"
      },
      "id": "check-products",
      "name": "Check Products",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 400]
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Test Connection",
            "type": "main",
            "index": 0
          },
          {
            "node": "Test Simple Products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Connection": {
      "main": [
        [
          {
            "node": "Check Connection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Simple Products": {
      "main": [
        [
          {
            "node": "Check Products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}